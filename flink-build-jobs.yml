jobs:
- job: runOnDefaultAgentPool # = custom machines
  pool:
    name: Default
  container: flink-build-container
  timeoutInMinutes: 0
  steps:
  # Azure pipelines can only evaluate conditions with the build repo name in the steps.
  # if the repo == "flink-ci/flink", we execute the steps
  - script: sudo chown -R user:user /home/user
    condition: eq(variables['Build.Repository.Name'], 'flink-ci/flink')
  - script: sudo chown -R user:user .
    condition: eq(variables['Build.Repository.Name'], 'flink-ci/flink')
  - task: Maven@3
    condition: eq(variables['Build.Repository.Name'], 'flink-ci/flink')
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'clean install'
      timeoutInMinutes: 120

- job: runOnAzure
  pool:
    vmImage: 'ubuntu-latest'
  container: flink-build-container
  timeoutInMinutes: 0
  steps:
  # Azure pipelines can only evaluate conditions with the build repo name in the steps.
  # if the repo != "flink-ci/flink", we execute
  - script: sudo chown -R user:user /home/user
    condition: not(eq(variables['Build.Repository.Name'], 'flink-ci/flink'))
  - script: sudo chown -R user:user .
    condition: not(eq(variables['Build.Repository.Name'], 'flink-ci/flink'))
  - task: Maven@3
    condition: not(eq(variables['Build.Repository.Name'], 'flink-ci/flink'))
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'clean install'
      timeoutInMinutes: 240
